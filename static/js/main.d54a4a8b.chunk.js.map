{"version":3,"sources":["components/Heading.js","components/Home.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","header","H1","h1","P","p","Span","span","Heading","Img","img","Home","url","id","setslectedImg","style","margin","onClick","src","alt","Modal","slectedImg","Container","className","e","div","WrapperImages","section","App","useState","images","setImage","useEffect","axios","get","then","res","data","map","image","urls","regular","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAKMA,EAASC,IAAOC,OAAV,8FAMNC,EAAKF,IAAOG,GAAV,wGAKFC,EAAIJ,IAAOK,EAAV,0CAGDC,EAAON,IAAOO,KAAV,2CAKGC,EAAU,WAEnB,OACI,eAACT,EAAD,WACI,eAACG,EAAD,mBAAS,cAACI,EAAD,sBAAT,OACA,cAACF,EAAD,kDCtBNK,EAAMT,IAAOU,IAAV,ymBAyBIC,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,cAC5B,OACI,mCACI,qBAAKC,MAAO,CAAEC,OAAQ,cAAiBC,QAAS,kBAAMH,EAAcF,IAApE,SACI,cAACH,EAAD,CAAcS,IAAKN,EAAKO,IAAI,UAAlBN,Q,iBChBXO,EAbD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYP,EAAoB,EAApBA,cAMzB,OACI,cAACQ,EAAD,CAAWC,UAAU,WAAWN,QAJhB,SAACO,GACjBV,EAAc,OAGd,SACI,qBAAKI,IAAKG,EAAYF,IAAI,mBAShCG,EAAYtB,IAAOyB,IAAV,+UCfTC,EAAgB1B,IAAO2B,QAAV,qMA2CJC,MA9Bf,WAAgB,IAAD,EACuBC,mBAAS,MADhC,mBACNR,EADM,KACMP,EADN,OAEce,mBAAS,IAFvB,mBAENC,EAFM,KAEEC,EAFF,KAgBb,OAZAC,qBAAU,WAENC,IACGC,IAAI,mDACJC,MAAK,SAAAC,GACJL,EAAS,GAAD,mBAAKD,GAAL,YAAgBM,EAAIC,aAIjC,IAID,gCACE,cAAC,EAAD,IACA,cAACX,EAAD,UACGI,EAAOQ,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,CAAM3B,IAAK2B,EAAMC,KAAKC,QAAwB3B,cAAeA,GAAzByB,EAAM1B,SAG7CQ,GAAc,cAAC,EAAD,CAAOA,WAAYA,EAAYP,cAAeA,QClCpD4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d54a4a8b.chunk.js","sourcesContent":["// for heading\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  max-width: 70rem;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  margin-bottom: 0.5em;\r\n  color: black;\r\n  text-shadow: 3px 3px 3px gray;\r\n`;\r\nconst P = styled.p`\r\ncolor: gray;\r\n`\r\nconst Span = styled.span`\r\ncolor: green;\r\n`\r\n\r\n\r\nexport const Heading = () => {\r\n\r\n    return (\r\n        <Header>\r\n            <H1>Wall-<Span>Gallary</Span> </H1>\r\n            <P>Source of freely usable images.</P>\r\n\r\n\r\n        </Header>\r\n    )\r\n}","// for Image Gallery\r\n\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  object-fit: cover;\r\n  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n    border-color: rgba(249, 249, 249, 0.8);\r\n  transition: opacity 500ms ease-in-out 0s;\r\n  border-radius: 10px;\r\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n  \r\n &:hover{\r\n    transform: scale(1.05);\r\n    transition-duration: 0.5s;\r\n    \r\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\r\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\r\n      border: 3px solid rgba(249, 249, 249, 0.1);\r\n  }\r\n`\r\n\r\n\r\n\r\n\r\nexport const Home = ({ url, id, setslectedImg }) => {\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"10px 10px \", }} onClick={() => setslectedImg(url)}>\r\n                <Img key={id} src={url} alt=\"images\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n// for image preview\r\n\r\n\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Modal = ({ slectedImg, setslectedImg }) => {\r\n\r\n\r\n    const handleClick = (e) => {\r\n        setslectedImg(null);\r\n    }\r\n    return (\r\n        <Container className=\"backdrop\" onClick={handleClick}>\r\n            <img src={slectedImg} alt=\"preview img\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n\r\n\r\n\r\nconst Container = styled.div`\r\nposition: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  img{\r\n  display: block;\r\n  max-width: 60%;\r\n  max-height: 80%;\r\n  margin: 60px auto;\r\n  box-shadow: 3px 5px 7px rgba(0, 0, 0, 0.5);\r\n  border: 3px solid white;\r\n  border-radius: 10px;\r\n  }\r\n`","import React, { useState, useEffect } from 'react';\nimport { Heading } from './components/Heading';\nimport { Home } from './components/Home';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Modal from './components/Modal';\n\n\n\nconst WrapperImages = styled.section`\n  max-width: 70rem;\n  margin: 4rem auto;\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-auto-rows: 300px;\n`;\n\n\n\n\n\nfunction App() {\n  const [slectedImg, setslectedImg] = useState(null);\n  const [images, setImage] = useState([]);\n\n  useEffect(() => {\n    const fetchImages = () => {\n      axios\n        .get(\"http://www.mocky.io/v2/5ecb5c353000008f00ddd5a0\")\n        .then(res => {\n          setImage([...images, ...res.data]);\n        })\n    }\n    fetchImages();\n  }, [])\n\n\n  return (\n    <div>\n      <Heading />\n      <WrapperImages>\n        {images.map(image => (\n          <Home url={image.urls.regular} key={image.id} setslectedImg={setslectedImg} />\n        ))}\n      </WrapperImages>\n      {slectedImg && <Modal slectedImg={slectedImg} setslectedImg={setslectedImg} />}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}